@page "/login"
@attribute [AllowAnonymous]
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthService

@using System.Net.Http
@using System.Text.Json
@using System.Text
@using BookStoreApp.Shared.Services
@using Microsoft.AspNetCore.Authorization

<PageTitle>Login</PageTitle>

<h1>Login</h1>

<div class="card-body">
    @if (RegistrationError != null)
    {
        <p class="text-danger">@RegistrationError</p>
    }
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email</label>
            <InputText class="form-control" @bind-Value="LoginModel.Email" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText class="form-control" @bind-Value="LoginModel.Password" />
        </div>
        <br />
        <button class="btn btn-primary" type="submit">Login</button>
    </EditForm>
</div>

@code {
    private HttpClient httpClient = new HttpClient();
    private string RegistrationError = null!;
    private UserToLoginDTO LoginModel { get; set; } = new UserToLoginDTO();

    private async Task HandleLogin()
    {
        ResponseAPI response = await AuthService.AuthenticateAsync(LoginModel);

        if (response.IsValidate)
        {
            NavigationManager.NavigateTo("");
        }
        else
        {
            // Display the error message
            RegistrationError = response.ResponseBody;
        }
    }

}
